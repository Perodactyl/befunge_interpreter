select{
	border: var(--cell-border-color) outset var(--cell-border-width);
}
html *{
	font-family: 'Fira Code', 'Courier New', Courier, monospace;
}
#container{
	position: absolute;
	top: 0;
	left: 0;
	border-collapse: collapse;
	width: 100%;
	margin: 0;
	padding: 0;
	border: 0;
	display: flex;
	flex-wrap: wrap;
}
#container > *{
	display: inline-block;
}
#stack{
	width: 200px;
	background-color: var(--stack-bg-color);
	color: var(--bg-contrast);
	display: inline-flex;
	flex-direction: column-reverse;
	flex-wrap: wrap;
	justify-content: flex-start;
}
.stack-element{
	display: flex;
	justify-content: space-between;
	white-space: pre;
}
#output{
	flex: 1;
	background-color: var(--output-bg-color);
	color: var(--bg-contrast);
	border-left:2px solid var(--stack-output-seperator);
	color: #fff;
	flex-direction: column;
}
#output *{
	color: #fff;
}
#output:not(.initial){
	white-space: pre-wrap; /* Allows newlines and such to be visible, while still allowing word wrapping */
	word-wrap: anywhere; /* Wrap anywhere so that things still look OK with long strings of text */
	display: flex;
}
#output.initial{
	font-size: x-small;
}
.output-line-no{
	display: inline-block;
	color: #777;
	font-size: 0.8em;
	border-right: 2px solid #777;
	padding-right: 5px;
	min-width: 2.5em;
	margin-right: 5px;
	text-align: right;
	font-weight: bold;
}
#swap-value{
	position: absolute;
	right: 0;
	color: var(--swap-color);
	background-color: var(--bottom-bar-right);
	width: 5rem; /* Max 5 characters of space. */
	padding: inherit;
	border-radius: inherit;
}
#controls{
	background-color: var(--bottom-bar);
	color: #fff;
	display: inline-flex;
	flex-basis: 100%; /* 100% Forces it to wrap to the next line and completely fills it */
	padding: 2px;
	border-radius: 3px;
}
body{
	overflow: hidden;
	background-color: var(--bg-color);
}
.no-background, .no-background-self, .no-background *{ /* Make sure that elements that have the background color have the fg color so that there is enough contrast. */
	color: var(--bg-contrast);
}
:not(.no-background, .no-background-self, .no-background *){
	color: var(--fg-color);
}
#main-table, #body{
	margin: 0;
	background-color: grey;
	border-spacing: 0;
	height: fit-content;
	width: fit-content;
}
button, .table-button, select{
	border: var(--cell-border-width) outset var(--cell-border-color);
	border-radius: 5px;
	accent-color: var(--cell-border-color);
}
button:active, .table-button:active{
	border-style: inset;
}
button:disabled, .table-button:disabled{
	background-color: #f22;
	opacity: 0.9;
	color: #fff;
	border-style: ridge;
	cursor: not-allowed;
}
#body td{
	display: inline-block;
	width: calc(var(--cell-size) / 2);
	height: var(--cell-size);
	border: var(--cell-border-width) outset var(--cell-border-color);
	text-align: center;
	font-size: var(--cell-font-size);
	background: var(--cell-bg);
}
#body > :first-child td{
	border: var(--cell-border-width) solid transparent;
	border-bottom: 1px solid #000;
	writing-mode: vertical-rl;
}
#body tr > :first-child{
	border: var(--cell-border-width) solid transparent;
	border-right: 1px solid #000;
	writing-mode: vertical-rl;
	border-top: 1px solid #000;
	border-bottom: 1px solid #000;
}
#body > tr:first-child > :first-child{
	border: var(--cell-border-width) solid transparent;
	border-bottom: 1px solid #000;
	border-right: 1px solid #000;
}
#body > :first-child td, #body > tr:first-child > :first-child, #body > tr > :first-child{ /* All edge tiles */
	background-color: var(--pos-bg);
	font-size: small;
}
#body tr{
	margin: 0;
	padding: 0;
}
#body td.selected {
	border-color: blue;
	border-style: solid;
}
#body.importing td.selected {
	background-color: blue;
}
#body.importing td.selected {
	background-color: red;
}
#body td:active{
	border-style: inset;
}
#pluspad{
	grid-row-gap: 0;
	grid-column-gap: 0;
}
#pluspad td{
	width: var(--cell-size);
	height: var(--vert-cell-size);
	border: var(--cell-border-width) outset var(--cell-border-color);
	background-color: lightgrey;
	text-align: center;
}
#pluspad td.selected, #pluspad td:active{
	border-style: inset;
}
#pluspad td.empty{
	visibility: hidden;
}

.stack-element [data-multi=true] .stack-char-cont{ /* Invisible Char */
	color: var(--stack-multi);
}
.stack-element [data-multi=false] .stack-char-cont{ /* Visible Char */
	color: var(--stack-single);
}
.stack-entry-num{ /* Index */
	color: var(--stack-index);
}
.stack-num{ /* Value */
	color: var(--stack-num);
}

[data-syntax-highlight=">"], [data-syntax-highlight="<"], [data-syntax-highlight="v"], [data-syntax-highlight="^"]{ /* Direction Up, Down, Left, and Right */
	color: var(--syntax-direction);
	font-weight: bold;
	text-shadow: 1px 1px 1px var(--syntax-direction);
}
[data-syntax-highlight="+"], [data-syntax-highlight="-"], [data-syntax-highlight="*"], [data-syntax-highlight="/"], [data-syntax-highlight="%"]{ /* Math Add, Sub, Mul, Div, and Mod */
	color: var(--syntax-math);
	font-weight: bold;
}
[data-syntax-highlight="."], [data-syntax-highlight=","]{ /* Output Number and Ascii */
	color: var(--syntax-out);
}
[data-syntax-highlight="~"], [data-syntax-highlight="&"]{ /* Input Number and Ascii */
	color: var(--syntax-in);
}
[data-syntax-highlight="0"], [data-syntax-highlight="1"], [data-syntax-highlight="2"], [data-syntax-highlight="3"], [data-syntax-highlight="4"], [data-syntax-highlight="5"],
[data-syntax-highlight="6"], [data-syntax-highlight="7"], [data-syntax-highlight="8"], [data-syntax-highlight="9"]{ /* Number Push */
	color: var(--syntax-number);
}
[data-syntax-highlight="!"], [data-syntax-highling="`"]{ /* Compare Invert and Greater Than */
	color: var(--syntax-logic);
}
[data-syntax-highlight="|"], [data-syntax-highlight="_"], [data-syntax-highlight="?"]{ /* Direction Horiz Logic, Vert Logic, and Rand */
	color: var(--syntax-direction-logic);
}
[data-syntax-highlight="\""]{ /* String Enter and Exit */
	color: var(--syntax-string);
}
[data-syntax-highlight=":"], [data-syntax-highlight="\\"], [data-syntax-highlight="$"]{ /* Stack Clone, Swap, and Discard */
	color: var(--syntax-stack-control);
}
[data-syntax-highlight="@"]{ /* Stop */
	color: var(--syntax-stop);
	font-weight: bold;
	text-shadow: 1px 1px 1px var(--syntax-stop); /* Extra bold */
}
[data-syntax-highlight="g"], [data-syntax-highlight="p"]{ /* Get and Put */
	color: var(--syntax-board-rw);
}
[data-syntax-highlight="#"]{ /* Bridge */
	color: var(--syntax-board-routing);
}
[data-syntax-highlight="{"], [data-syntax-highlight="}"]{ /* Number Composition */
	color: var(--syntax-ext-compose);
}
[data-syntax-highlight="["], [data-syntax-highlight="]"]{ /* Stack Rotate */
	color: var(--syntax-ext-shift);
}
[data-syntax-highlight="("], [data-syntax-highlight=")"]{ /* Swap Store and Retrieve */
	color: var(--syntax-ext-swap);
}
[data-syntax-highlight=";"]{ /* Stack Length Operator */
	color: var(--syntax-ext-length);
}
:root{
	--cell-size: 15px;
	--vert-cell-size: 20px;
	--cell-font-size: unset;
	--cell-border-width: 2px;

	--stack-single: #0af;
	--stack-multi: #fa0;
	--stack-index: #f0f;
	--stack-num: var(--syntax-number); /* Same as numbers in the board, for color coding */

	/* Syntax */
	--syntax-direction: #f2f;
	--syntax-math: #ff0;
	--syntax-out: #0fa;
	--syntax-in: #0af;
	--syntax-number: #f70;
	--syntax-logic: #f0a;
	--syntax-direction-logic: #f6f;
	--syntax-string: #0f0;
	--syntax-stack-control: #f0f;
	--syntax-stop: #f00;
	--syntax-board-rw: #00f;
	--syntax-board-routing: #f9f;

	/* Extended Syntax */
	--syntax-ext-compose: #f0f;
	--syntax-ext-shift: #a0a;
	--syntax-ext-swap: #f0f;
	--syntax-ext-length: #af0;
	--heap-item: #fff;
	--heap-item-selected: #f0f;
}
:root.cobalt{
	--cell-border-color: #668; /* Averages to 777 */
	--pos-bg: #88f;
	--cell-bg: #00f;

	--bg-color: #113;
	--bg-contrast: #aaf;
	--fg-color: #227;
	--output-bg-color: var(--bg-color);
	--stack-bg-color: var(--bg-color);

	--bottom-bar: #55f;
	--bottom-bar-right: #33f;
	--swap-color: var(--fg-color);
	--stack-output-seperator: #55f;
}
:root.normal{
	--cell-border-color: #777;
	--pos-bg: #777;
	--cell-bg: #777;

	--bg-color: #777;
	--bg-contrast: #000;
	--fg-color: #000;
	--output-bg-color: #000;
	--stack-bg-color: #000;

	--bottom-bar: #000;
	--bottom-bar-right: #000;
	--swap-color: var(--fg-color);
	--stack-output-seperator: #777;
}
#heap{
	position: absolute;
    bottom: 0;
    right: 0;
	width: 100%;
    background-color: var(--bg-contrast);
	display: flex;
	justify-content: center;
	border-collapse: collapse;
}
#heap .heap-item{
	display: inline-block;
	color: var(--heap-item);
	border-width: 0px 1px 0px 0px; /* Right */
	border-color: var(--heap-item);
	border-style: solid;
	padding: 3px;
	margin: 0px;
	width: 2.5rem;
}
#heap .heap-item.selected-heap-item{
	background-color: var(--heap-item-selected);
}